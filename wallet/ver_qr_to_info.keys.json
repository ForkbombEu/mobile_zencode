{
    "data": {},
    "keys": {},
    "result_to_name_path": "result.display.0.name",
    "result_to_schema_path": "result.items.0.schema",
    "result_to_verification_endpoint_path": "result.verification_endpoint",
    "name_path": "name",
    "show_parameters_path": "show_parameters",
    "rp_path": "rp",
    "exp_path": "exp",
    "id_path": "id",
    "rp_wk_endpoint_path": "rp_wk_endpoint",
    "rp_wk_path": "rp_wk",
    "credential_array_path": "credential_array",
    "asked_claims_path": "asked_claims",
    "show_parameters_temp_path": "show_parameters_temp",
    "result_path": "result",
    "vp_path": "vp",
    "pb_url": "https://admin.didroom.com",
    "show_parameters_temp": {
        "collection": "users",
        "fields": "name"
    },
    "my_credentials": {
        "email": "test@didroom.com",
        "password": "testtest"
    },
    "zen_1": "Given I have a 'string' named 'rp'\nand I have a 'time' named 'exp'\nand I have a 'string' named 'id'\nand I have a 'string dictionary' named 'show_parameters_temp'\n\n# check qr expiration\nWhen I create the timestamp\nIf I verify number 'exp' is less than 'timestamp'\nWhen I exit with error message 'QR code is expired'\nEndIf\n\nWhen I move 'id' in 'show_parameters_temp'\nand I rename 'show_parameters_temp' to 'show_parameters'\n\nIf I verify 'rp' has suffix '/'\nWhen I split rightmost '1' bytes of 'rp'\nEndIf\n\nWhen I append the string '/.well-known/openid-relying-party' to 'rp'\nand I rename 'rp' to 'rp_wk_endpoint'\n\nThen print the 'rp_wk_endpoint'\nThen print the 'show_parameters'\n",
    "zen_2": "Scenario 'w3c': jwt\nScenario 'sd_jwt': vp\n\nGiven I have a 'string dictionary' named 'asked_claims'\nand I have a 'string dictionary' named 'rp_wk'\nand I have a 'signed selective disclosure array' named 'credential_array'\n\nWhen I pickup from path 'asked_claims.required'\nWhen I pickup from path 'rp_wk.trusted_credential_issuers'\n# at the moment extract just the first one\n# to be understand if they are always this to be chekced and loop over all the possible values\nWhen I pickup from path 'rp_wk.credential_configurations_supported.1.format'\nWhen I pickup from path 'rp_wk.credential_configurations_supported.1.credential_signing_alg_values_supported.1'\nand I rename '1' to 'credential_signing_alg_values_supported'\n\nWhen I create the 'signed selective disclosure array' named 'result_array'\nWhen I create the 'string array' named 'disclosures_array'\nWhen I create the timestamp\nForeach 'ssd' in 'credential_array'\nWhen I pickup from path 'ssd.jwt.payload'\nWhen I pickup from path 'ssd.jwt.header'\nWhen I verify 'iss' is found in 'payload'\nWhen I pickup from path 'payload.iss'\nWhen I verify 'exp' is found in 'payload'\nWhen I pickup from path 'payload.exp'\n# matches the cryptography of the credential (header)\nIf I verify 'format' is equal to 'typ' in 'header'\nand I verify 'credential_signing_alg_values_supported' is equal to 'alg' in 'header'\nand I verify 'iss' is found in 'trusted_credential_issuers'\nand I verify disclosures 'required' are found in signed selective disclosure 'ssd'\nand I verify number 'timestamp' is less than 'exp'\nWhen I use signed selective disclosure 'ssd' only with disclosures 'required'\nand I rename 'ssd' to 'vp'\nand I remove 'payload'\nand I remove 'header'\nand I remove 'iss'\nand I remove 'exp'\nand I break foreach\nEndIf\nWhen I remove 'payload'\nand I remove 'header'\nand I remove 'iss'\nand I remove 'exp'\nEndforeach\n\nIf I verify 'vp' is not found\nWhen I exit with error message 'no signed selective disclosure found that matched the requested claims'\nEndIf\n\nThen print the 'vp'\n"
}
